// Generated by view binder compiler. Do not edit!
package com.example.challenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.challenge.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLogInBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton btnLogIn;

  @NonNull
  public final AppCompatEditText etEmail;

  @NonNull
  public final AppCompatEditText etPassword;

  @NonNull
  public final LoaderBinding loaderInclude;

  private FragmentLogInBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton btnLogIn, @NonNull AppCompatEditText etEmail,
      @NonNull AppCompatEditText etPassword, @NonNull LoaderBinding loaderInclude) {
    this.rootView = rootView;
    this.btnLogIn = btnLogIn;
    this.etEmail = etEmail;
    this.etPassword = etPassword;
    this.loaderInclude = loaderInclude;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLogInBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLogInBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_log_in, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLogInBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLogIn;
      AppCompatButton btnLogIn = ViewBindings.findChildViewById(rootView, id);
      if (btnLogIn == null) {
        break missingId;
      }

      id = R.id.etEmail;
      AppCompatEditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.etPassword;
      AppCompatEditText etPassword = ViewBindings.findChildViewById(rootView, id);
      if (etPassword == null) {
        break missingId;
      }

      id = R.id.loaderInclude;
      View loaderInclude = ViewBindings.findChildViewById(rootView, id);
      if (loaderInclude == null) {
        break missingId;
      }
      LoaderBinding binding_loaderInclude = LoaderBinding.bind(loaderInclude);

      return new FragmentLogInBinding((ConstraintLayout) rootView, btnLogIn, etEmail, etPassword,
          binding_loaderInclude);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
