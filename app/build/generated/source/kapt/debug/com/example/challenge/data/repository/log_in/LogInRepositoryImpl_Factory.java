// Generated by Dagger (https://dagger.dev).
package com.example.challenge.data.repository.log_in;

import com.example.challenge.data.common.HandleResponse;
import com.example.challenge.data.service.log_in.LogInService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class LogInRepositoryImpl_Factory implements Factory<LogInRepositoryImpl> {
  private final Provider<LogInService> logInServiceProvider;

  private final Provider<HandleResponse> handleResponseProvider;

  public LogInRepositoryImpl_Factory(Provider<LogInService> logInServiceProvider,
      Provider<HandleResponse> handleResponseProvider) {
    this.logInServiceProvider = logInServiceProvider;
    this.handleResponseProvider = handleResponseProvider;
  }

  @Override
  public LogInRepositoryImpl get() {
    return newInstance(logInServiceProvider.get(), handleResponseProvider.get());
  }

  public static LogInRepositoryImpl_Factory create(Provider<LogInService> logInServiceProvider,
      Provider<HandleResponse> handleResponseProvider) {
    return new LogInRepositoryImpl_Factory(logInServiceProvider, handleResponseProvider);
  }

  public static LogInRepositoryImpl newInstance(LogInService logInService,
      HandleResponse handleResponse) {
    return new LogInRepositoryImpl(logInService, handleResponse);
  }
}
